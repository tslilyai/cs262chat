syntax = "proto2";

package chatapp;

service ChatApp {
    rpc rpc_send_individual_message(CMessage) returns (Response) {}
    rpc rpc_send_group_message(CMessage) returns (Response) {}
    rpc rpc_get_messages(User) returns (stream CMessage) {}
    rpc rpc_create_group(Group) returns (Response) {}
    rpc rpc_create_account(User) returns (Response) {}
    rpc rpc_remove_account(User) returns (Response) {}
    rpc rpc_edit_group_name(Group) returns (Response) {}
    rpc rpc_remove_group_member(Group) returns (Response) {}
    rpc rpc_add_group_member(Group) returns (Response) {}
    rpc rpc_list_group_members(Group) returns (stream User) {}
    rpc rpc_list_groups(Pattern) returns (stream Group) {}
    rpc rpc_list_accounts(Pattern) returns (stream User) {}
}

message CMessage {
    optional int64 m_id = 1;
    required string to_name = 2;
    required string from_name = 3;
    optional string msg = 4;
}

message User {
    optional int64 u_id = 1;
    optional string username = 2;
    optional string password = 3;
}

message Group {
    optional int64 g_id = 1;
    optional string g_name = 2;
    repeated int64 member_ids = 3;
    optional string edit_member_name = 4;
    optional string new_name = 5;
}

message Response {
    optional int32 errno = 1;
    optional string msg = 2;
}

message Pattern {
    optional string pattern = 1;
}
